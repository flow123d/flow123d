--------------------------------------------------------------------------
Petsc Release Version 3.4.0, May, 13, 2013 
       The PETSc Team
    petsc-maint@mcs.anl.gov
 http://www.mcs.anl.gov/petsc/
See docs/changes/index.html for recent updates.
See docs/faq.html for problems.
See docs/manualpages/index.html for help. 
Libraries linked from /home/jb/local/petsc-3.4.0/gcc_4.8_O3_native_full/lib
--------------------------------------------------------------------------
Options for all PETSc programs:
 -help: prints help method for each option
 -on_error_abort: cause an abort when an error is detected. Useful 
        only when run in the debugger
 -on_error_attach_debugger [gdb,dbx,xxgdb,ups,noxterm]
       start the debugger in new xterm
       unless noxterm is given
 -start_in_debugger [gdb,dbx,xxgdb,ups,noxterm]
       start all processes in the debugger
 -on_error_emacs <machinename>
    emacs jumps to error file
 -debugger_nodes [n1,n2,..] Nodes to start in debugger
 -debugger_pause [m] : delay (in seconds) to attach debugger
 -stop_for_debugger : prints message on how to attach debugger manually
                      waits the delay for you to attach
 -display display: Location where graphics and debuggers are displayed
 -no_signal_handler: do not trap error signals
 -mpi_return_on_error: MPI returns error code, rather than abort on internal error
 -fp_trap: stop on floating point exceptions
           note on IBM RS6000 this slows run greatly
 -malloc_dump <optional filename>: dump list of unfreed memory at conclusion
 -malloc: use our error checking malloc
 -malloc no: don't use error checking malloc
 -malloc_info: prints total memory usage
 -malloc_log: keeps log of all memory allocations
 -malloc_debug: enables extended checking for memory corruption
 -options_table: dump list of options inputted
 -options_left: dump list of unused options
 -options_left no: don't dump list of unused options
 -tmp tmpdir: alternative /tmp directory
 -shared_tmp: tmp directory is shared by all processors
 -not_shared_tmp: each processor has separate tmp directory
 -memory_info: print memory usage at end of run
 -server <port>: Run PETSc webserver (default port is 8080) see PetscWebServe()
 -get_total_flops: total flops over all processors
 -log[_summary _summary_python]: logging objects and events
 -log_trace [filename]: prints trace of all PETSc calls
 -info <optional filename>: print informative messages about the calculations
 -v: prints PETSc version number and release date
 -options_file <file>: reads options from file
 -petsc_sleep n: sleeps n seconds before running program
-----------------------------------------------
------Additional PETSc component options--------
 -log_summary_exclude: <vec,mat,pc.ksp,snes>
 -info_exclude: <null,vec,mat,pc,ksp,snes,ts>
-----------------------------------------------
Options database options -------------------------------------------------
  -options_monitor <stdout>: Monitor options database (PetscOptionsMonitorSet)
  -options_monitor_cancel: <FALSE> Cancel all options database monitors (PetscOptionsMonitorCancel)
Thread comm - setting number of threads -------------------------------------------------
  -threadcomm_nthreads <1>: number of threads to use in the thread communicator (PetscThreadCommSetNThreads)
Thread comm - setting thread affinities -------------------------------------------------
  -threadcomm_affinities <48613168>: Set core affinities of threads (PetscThreadCommSetAffinities)
Thread comm - setting number of kernels -------------------------------------------------
  -threadcomm_nkernels <16>: number of kernels that can be launched simultaneously ()
Thread comm - setting threading model -------------------------------------------------
  -threadcomm_type <nothread>: Thread communicator model (one of) nothread (PetscThreadCommSetType)
Options for SEQAIJ matrix -------------------------------------------------
  -mat_no_unroll: <FALSE> Do not optimize for inodes (slower) (None)
  -mat_no_inode: <FALSE> Do not optimize for inodes -slower- (None)
  -mat_inode_limit <5>: Do not use inodes larger then this value (None)
Matrix (Mat) options -------------------------------------------------
  -matmatmult_scalable: <FALSE> Use a scalable but slower C=A*B ()
  -matmatmult_scalable_fast: <FALSE> Use a scalable but slower C=A*B ()
  -matmatmult_heap: <FALSE> Use heap implementation of symbolic factorization C=A*B ()
  -matmatmult_btheap: <FALSE> Use btheap implementation of symbolic factorization C=A*B ()
  -matmatmult_llcondensed: <FALSE> Use LLCondensed to for symbolic C=A*B ()
Preconditioner (PC) options -------------------------------------------------
  -pc_type <icc>: Preconditioner (one of) none jacobi pbjacobi bjacobi sor lu shell mg
      eisenstat ilu icc cholesky asm gasm ksp composite redundant nn mat fieldsplit galerkin exotic hmpi asa cp lsc redistribute svd gamg hypre pfmg syspfmg tfs (PCSetType)
  -pc_use_amat: <FALSE> use Amat (instead of Pmat) to define preconditioner in nested inner solves (PCSetUseAmat)
  ILU Options
  -pc_factor_in_place: <FALSE> Form factored matrix in the same memory as the matrix (PCFactorSetUseInPlace)
  -pc_factor_fill <1>: Expected non-zeros in factored matrix (PCFactorSetFill)
  -pc_factor_shift_type <INBLOCKS> (choose one of) NONE NONZERO POSITIVE_DEFINITE INBLOCKS (PCFactorSetShiftType)
  -pc_factor_shift_amount <2.22045e-14>: Shift added to diagonal (PCFactorSetShiftAmount)
  -pc_factor_zeropivot <2.22045e-14>: Pivot is considered zero if less than (PCFactorSetZeroPivot)
  -pc_factor_column_pivot <-2>: Column pivot tolerance (used only for some factorization) (PCFactorSetColumnPivot)
  -pc_factor_pivot_in_blocks: <TRUE> Pivot inside matrix dense blocks for BAIJ and SBAIJ (PCFactorSetPivotInBlocks)
  -pc_factor_reuse_fill: <FALSE> Use fill from previous factorization (PCFactorSetReuseFill)
  -pc_factor_reuse_ordering: <FALSE> Reuse ordering from previous factorization (PCFactorSetReuseOrdering)
  -pc_factor_mat_ordering_type <natural>: Reordering to reduce nonzeros in factored matrix (one of) natural nd 1wd rcm qmd rowlength (PCFactorSetMatOrderingType)
  -pc_factor_mat_solver_package <petsc>: Specific direct solver to use (MatGetFactor)
  -pc_factor_levels <0>: levels of fill (PCFactorSetLevels)
  -pc_factor_diagonal_fill: <FALSE> Allow fill into empty diagonal entry (PCFactorSetAllowDiagonalFill)
  -pc_factor_nonzeros_along_diagonal: Reorder to remove zeros from diagonal (PCFactorReorderForNonzeroDiagonal)
Krylov Method (KSP) options -------------------------------------------------
  -ksp_type <gmres>: Krylov method (one of) cg groppcg pipecg cgne nash stcg gltr richardson
      chebyshev gmres tcqmr bcgs ibcgs fbcgs fbcgsr bcgsl cgs tfqmr cr pipecr lsqr preonly qcg bicg fgmres minres symmlq lgmres lcd gcr pgmres specest dgmres (KSPSetType)
  -ksp_max_it <10000>: Maximum number of iterations (KSPSetTolerances)
  -ksp_rtol <1e-12>: Relative decrease in residual norm (KSPSetTolerances)
  -ksp_atol <1e-12>: Absolute value of residual norm (KSPSetTolerances)
  -ksp_divtol <10000>: Residual norm increase cause divergence (KSPSetTolerances)
  -ksp_converged_use_initial_residual_norm: <FALSE> Use initial residual residual norm for computing relative convergence (KSPDefaultConvergedSetUIRNorm)
  -ksp_converged_use_min_initial_residual_norm: <FALSE> Use minimum of initial residual norm and b for computing relative convergence (KSPDefaultConvergedSetUMIRNorm)
  -ksp_initial_guess_nonzero: <FALSE> Use the contents of the solution vector for initial guess (KSPSetInitialNonzero)
  -ksp_knoll: <FALSE> Use preconditioner applied to b for initial guess (KSPSetInitialGuessKnoll)
  -ksp_error_if_not_converged: <FALSE> Generate error if solver does not converge (KSPSetErrorIfNotConverged)
  -ksp_fischer_guess <0>: Use Paul Fischer's algorithm for initial guess (KSPSetUseFischerGuess)
  -ksp_convergence_test <default> (choose one of) default skip (KSPSetConvergenceTest)
  -ksp_norm_type <PRECONDITIONED> (choose one of) NONE PRECONDITIONED UNPRECONDITIONED NATURAL (KSPSetNormType)
  -ksp_check_norm_iteration <-1>: First iteration to compute residual norm (KSPSetCheckNormIteration)
  -ksp_lag_norm: <FALSE> Lag the calculation of the residual norm (KSPSetLagNorm)
  -ksp_diagonal_scale: <FALSE> Diagonal scale matrix before building preconditioner (KSPSetDiagonalScale)
  -ksp_diagonal_scale_fix: <FALSE> Fix diagonally scaled matrix after solve (KSPSetDiagonalScaleFix)
  -ksp_constant_null_space: <FALSE> Add constant null space to Krylov solver (KSPSetNullSpace)
  -ksp_converged_reason: <FALSE> Print reason for converged or diverged (KSPSolve)
  -ksp_monitor_cancel: <FALSE> Remove any hardwired monitor routines (KSPMonitorCancel)
  -ksp_monitor <stdout>: Monitor preconditioned residual norm (KSPMonitorSet)
  -ksp_monitor_range <stdout>: Monitor percent of residual entries more than 10 percent of max (KSPMonitorRange)
  -ksp_monitor_solution: <FALSE> Monitor solution graphically (KSPMonitorSet)
  -ksp_monitor_true_residual <stdout>: Monitor true residual norm (KSPMonitorSet)
  -ksp_monitor_max <stdout>: Monitor true residual max norm (KSPMonitorSet)
  -ksp_monitor_singular_value <stdout>: Monitor singular values (KSPMonitorSet)
  -ksp_monitor_short <stdout>: Monitor preconditioned residual norm with fewer digits (KSPMonitorSet)
  -ksp_monitor_python <(null)>: Use Python function (KSPMonitorSet)
  -ksp_monitor_lg_residualnorm: <FALSE> Monitor graphically preconditioned residual norm (KSPMonitorSet)
  -ksp_monitor_lg_true_residualnorm: <FALSE> Monitor graphically true residual norm (KSPMonitorSet)
  -ksp_monitor_lg_range: <FALSE> Monitor graphically range of preconditioned residual norm (KSPMonitorSet)
  -ksp_pc_side <LEFT> (choose one of) LEFT RIGHT SYMMETRIC (KSPSetPCSide)
  -ksp_compute_singularvalues: <FALSE> Compute singular values of preconditioned operator (KSPSetComputeSingularValues)
  -ksp_compute_eigenvalues: <FALSE> Compute eigenvalues of preconditioned operator (KSPSetComputeSingularValues)
  -ksp_plot_eigenvalues: <FALSE> Scatter plot extreme eigenvalues (KSPSetComputeSingularValues)
  KSP BCGS Options
  -ksp_view: View linear solver parameters (KSPView)

    HYPRE Parasails Options
  -pc_hypre_parasails_nlevels <1>: Number of number of levels (None)
  -pc_hypre_parasails_thresh <0.1>: Threshold (None)
  -pc_hypre_parasails_filter <0.1>: filter (None)
  -pc_hypre_parasails_loadbal <0>: Load balance (None)
  -pc_hypre_parasails_logging: <FALSE> Print info to screen (None)
  -pc_hypre_parasails_reuse: <FALSE> Reuse nonzero pattern in preconditioner (None)
  -pc_hypre_parasails_sym <nonsymmetric> (choose one of) nonsymmetric SPD nonsymmetric,SPD (None)
  
    HYPRE Euclid Options
  -pc_hypre_euclid_levels <1>: Number of levels of fill ILU(k) (None)
  -pc_hypre_euclid_bj: <FALSE> Use block Jacobi ILU(k) (None)
  -pc_hypre_euclid_print_statistics: <FALSE> Print statistics (None)
  
  ICC Options
  -sub_pc_factor_in_place: <FALSE> Form factored matrix in the same memory as the matrix (PCFactorSetUseInPlace)
  -sub_pc_factor_fill <1>: Expected non-zeros in factored matrix (PCFactorSetFill)
  -sub_pc_factor_shift_type <POSITIVE_DEFINITE> (choose one of) NONE NONZERO POSITIVE_DEFINITE INBLOCKS (PCFactorSetShiftType)
  -sub_pc_factor_shift_amount <1e-12>: Shift added to diagonal (PCFactorSetShiftAmount)
  -sub_pc_factor_zeropivot <1e-12>: Pivot is considered zero if less than (PCFactorSetZeroPivot)
  -sub_pc_factor_column_pivot <-2>: Column pivot tolerance (used only for some factorization) (PCFactorSetColumnPivot)
  -sub_pc_factor_pivot_in_blocks: <FALSE> Pivot inside matrix dense blocks for BAIJ and SBAIJ (PCFactorSetPivotInBlocks)
  -sub_pc_factor_reuse_fill: <FALSE> Use fill from previous factorization (PCFactorSetReuseFill)
  -sub_pc_factor_reuse_ordering: <FALSE> Reuse ordering from previous factorization (PCFactorSetReuseOrdering)
  -sub_pc_factor_mat_ordering_type <natural>: Reordering to reduce nonzeros in factored matrix (one of) natural nd 1wd rcm qmd rowlength (PCFactorSetMatOrderingType)
  -sub_pc_factor_mat_solver_package <petsc>: Specific direct solver to use (MatGetFactor)
  -sub_pc_factor_levels <0>: levels of fill (PCFactorSetLevels)
