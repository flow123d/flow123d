#!/bin/bash

# make flow123d dummy
cp ./tester_mpi test_dir/flow123d

cd test_dir

function die {
  echo "**************** TEST FAILURE *****************"
  echo "$1"
  exit 1
}

function expect_le {
  if [ -z "$1" -o -z "$2" ] 
  then
    die "Empty argument: arg1: '$1' arg2: '$2'" 
  fi
  
  if [ "$1" -le "$2" ]
  then 
    return 0
  else 
    die "Failed: $1 -lt $2" 
  fi 
}


function expect_eq {
  expect_le "$1" "$2"
  expect_le "$2" "$1"
}


function TEST {
  echo ""
  echo "*****************************************************"
  echo "* TEST: $1"
  echo "*****************************************************"
}
#####################################################3
# test time_limit.sh

TEST "killing serial program"
OUT=`./time_limit.sh -t 2 ./flow123d -t 6 | tail -n 1`
expect_le "${OUT##*: }" "2"


TEST "do not wait when program finish"
MILISEC=`{ time ./time_limit.sh -t 10 ./flow123d -t 2 ; } 2>&1 | grep "real" | sed 's/real *//' | sed 's/0m//' | sed 's/\\.//' | sed 's/s$//'`
expect_le "${MILISEC}" 3000

TEST "killing parallel program"
OUT="`./time_limit.sh -t 2 ./mpiexec -np 2 ./flow123d -t 6 -p`"
LAST_TIME=`echo "${OUT}" | grep "wall time" | tail -n 1 | sed 's/.*\[s\]: //'`
PIDS=`echo "${OUT}" | grep "PID:" | sed 's/PID://'`

expect_le "${LAST_TIME}" "2"

for PID in ${PIDS}
do
  if [ -e /proc/${PID} ]
  then  
    die "time_limit.sh faild to kill process: ${PID}"
  fi
done  

TEST "propagation of the exit code"
./time_limit.sh -t 2 bash -c "exit 13"
expect_eq "$?" "13"

./time_limit.sh -t 1 bash -c "sleep 6; exit 0"
expect_eq "$?" "143"


########################################################333
# test flow123d.sh

TEST "parameter propagation, NP, timeout"
OUT="`./flow123d.sh -t 2 -np 3 -- -t 6 -p`"

MPI_SIZE=`echo "${OUT}" | grep "MPI size:" | sed 's/.*: //'`
expect_eq "${MPI_SIZE}" "3"


LAST_TIME=`echo "${OUT}" | grep "wall time" | tail -n 1 | sed 's/.*\[s\]: //'`
expect_le "${LAST_TIME}" "2"

PIDS=`echo "${OUT}" | grep "PID:" | sed 's/PID://'`
for PID in ${PIDS}
do
  if [ -e /proc/${PID} ]
  then  
    die "flow123d.sh faild to kill process: ${PID}"
  fi
done  

TEST "memory limit"
OUT="`./flow123d.sh -t 4 -m 100 -np 3 -- -m 102400 -p `"
echo ${OUT}
MEMORY=`echo "${OUT}" | grep "allocated" | tail -n 1 | sed 's/.*\[kB\]://'`
expect_le "${MEMORY}" 102400


TEST "propagation of exit code"
./flow123d.sh -- -e 13
expect_eq "$?" "13"

./flow123d.sh -t 1 -- -t 5
expect_eq "$?" "143"


########################################################333
# test run_test.sh

#TEST "running test"
#touch ./file
#./tests/run_test.sh "file" "1" "-t 2"


TEST "reporting failing program"
touch ./file
OUT=`./tests/run_test.sh "file" "1" "-e 13"`
if ! echo "$OUT" | grep '\[Failed:error\]'
then
  echo "$OUT"
  die "Test didn't fail!"
fi

echo "****************************"
echo "* SUCCESS - all tests passed"
echo "****************************"
