

#########################################################################################
# Projects - Jenkins Jobs Builder way to generate templated jobs
#########################################################################################

- defaults:
    name: flow123d-build
    # default template fields
    node: "{platform}"
    workspace: "Flow123d-{platform}-{build-type}"
    wrappers:
      - build-name:
          name:  "${{PROPFILE,file=\"prop.file\",property=\"BUILD_NAME\"}}  #${{BUILD_NUMBER}}"


# Multijob  project - debug
- project:
    name: "Multijob project debug"
    platform: linux
    build-type: debug
    unit-dir: 
      - $PLACEHOLDER_unit_list$
    test-dir:
      - $PLACEHOLDER_test_list$
    
    jobs:
      - "Flow123d-configure-{platform}-{build-type}"
      - "Flow123d-build-libs-{platform}-{build-type}"
      - "Unit-test-{unit-dir}-{platform}-{build-type}"
      - "Flow123d-build-{platform}-{build-type}"
      - "Test-{test-dir}-{platform}-{build-type}"
      - "Flow123d-build-multijob-{platform}-debug"


# Multijob  project - release
- project:
    name: "Multijob project release"
    platform: [ linux, windows ]
    build-type: release
    unit-dir: 
      - $PLACEHOLDER_unit_list$
    test-dir:
      - $PLACEHOLDER_test_list$
    
    jobs:
      - "Flow123d-configure-{platform}-{build-type}"
      - "Flow123d-build-libs-{platform}-{build-type}"
      - "Unit-test-{unit-dir}-{platform}-{build-type}"
      - "Flow123d-build-{platform}-{build-type}"
      - "Test-{test-dir}-{platform}-{build-type}"
      - "Flow123d-{platform}-{build-type}-packages"
      - "Flow123d-build-multijob-{platform}-release"
      


#########################################################################################
# Single Job Templates
#########################################################################################



####################################################################
# Flow123d configure 
- job-template:
    name: "Flow123d-configure-{platform}-{build-type}"
    display-name: "{platform} {build-type} / configure "

    defaults: flow123d-build
    builders:
      - shell: |
          # configure
          cd flow123d
          cp config/config-jenkins-{platform}-{build-type}.cmake ./config.cmake
          make cmake

####################################################################
# Flow123d build libraries 
# - we need separate step for this since unit tests can run even if 
#   libraries do not build well
# - on other hand we want to prevent parallel build of same files if 
#   Jenkins execute run tests in parallel
# - we can still get this parallel problem when some library do not build
#   and two unit tests try to rebuild it
# - ultimate solution may be: do not have independent jobs for individual unit tests
#   just present generated XML files and use parallel make to make all unit tests and libraries
#   
- job-template:
    name: "Flow123d-build-libs-{platform}-{build-type}"
    display-name: "{platform} {build-type} / build libraries "
    defaults: flow123d-build
#    node: "{platform}"
#    workspace: "Flow123d-{platform}-{build-type}"
#    wrappers:
#      - build-name:
#          name:  "${PROPFILE,file=\"prop.file\",property=\"BUILD_NAME\"}  #${BUILD_NUMBER}"
    builders:
      - shell: |
          # configure
          cd flow123d
          make -j 4 all
          make -j 4 -C unit_tests gtest_mpi_obj         # build all common sources for unit tests

##################################################################
# Unit test for given directory
- job-template:
    name: "Unit-test-{unit-dir}-{platform}-{build-type}"
    display-name: "{platform} {build-type} / unit-test / {unit-dir}"
    defaults: flow123d-build
#    node: "{platform}"
#    workspace: "Flow123d-{platform}-{build-type}"
    properties:
      # Limit number of concurrently running unit tests to 2
      - throttle:
          max-per-node: 2
          option: "category"
#          categories:
#            - "Flow123d-category-unit-tests"
#    wrappers:
#      - build-name:
#          name:  "${PROPFILE,file=\"prop.file\",property=\"BUILD_NAME\"}  #${BUILD_NUMBER}"
    builders:
      - shell: |
          make -C flow123d/build_tree/unit_tests/{unit-dir} all-test


##################################################################
# Unit tests benchmarks for given directory     (NOT USED YET)        
- job-template:
    name: "Unit-benchmark-{unit-dir}-{platform}-{build-type}"
    display-name: "{platform} {build-type} / unit-bench / {unit-dir}"
    defaults: flow123d-build
#    node: "{platform}"
#    workspace: "Flow123d-{platform}-{build-type}"
#    wrappers:
#      - build-name:
#          name:  "${PROPFILE,file=\"prop.file\",property=\"BUILD_NAME\"}  #${BUILD_NUMBER}"
    builders:
      - shell: |
          make -C flow123d/build_tree/unit_tests/{unit-dir} all-tests


####################################################################
# Flow123d build main binary
- job-template:
    name: "Flow123d-build-{platform}-{build-type}"
    display-name: "{platform} {build-type} / flow123d build "
    defaults: flow123d-build
#    node: "{platform}"
#    workspace: "Flow123d-{platform}-{build-type}"
#    wrappers:
#      - build-name:
#          name:  "${PROPFILE,file=\"prop.file\",property=\"BUILD_NAME\"}  #${BUILD_NUMBER}"
    builders:
      - shell: |
          # configure
          cd flow123d
          make all

        
#################################################################
# Integration test for given directory
- job-template:
    name: "Test-{test-dir}-{platform}-{build-type}"
    display-name: "{platform} {build-type} / test / {test-dir}"
    defaults: flow123d-build
#    node: "{platform}"
#    workspace: "Flow123d-{platform}-{build-type}"
    properties:
      # Limit number of concurrently running integration tests to 2
      - throttle:
          max-per-node: 2
          option: "category"
          categories:
            - Flow123d-category-integration-tests

#    wrappers:
#      - build-name:
#          name:  "${PROPFILE,file=\"prop.file\",property=\"BUILD_NAME\"}  #${BUILD_NUMBER}"
    builders:
      - shell: |
          make -C flow123d/tests/{test-dir} test
        
#################################################################
# Packaging
- job-template:
    name: "Flow123d-{platform}-{build-type}-packages"
    display-name: "{platform} {build-type} / make packages"
    defaults: flow123d-build
#    node: "{platform}"
#    workspace: "Flow123d-{platform}-{build-type}"
#    wrappers:
#      - build-name:
#          name:  "${PROPFILE,file=\"prop.file\",property=\"BUILD_NAME\"}  #${BUILD_NUMBER}"    
    builders:
      - shell: |
          make -C flow123d/build-tree package
          make -C flow123d/build-tree package_source
#    publishers:
#      - cifs:
#          site: "bacula"
#          target: 
#          source: flow123d/build-tree/Flow123d-*  



#########################################################################################
# Multijob Job Templates
#########################################################################################



########################################################################
# Main multijob -debug
#
# possible values for condition: {SUCCESSFUL, UNSTABLE, COMPLETED}
- job-template:
    name: "Flow123d-build-multijob-{platform}-debug"
    display-name: "{platform} debug Flow123d multijob"
    project-type: multijob
    defaults: flow123d-build
#    node: "{platform}"
    block-downstream: yes
    # workspace                 - directory with per-branch builds and external-projects dir
    # workspace/flow123d        - directore git clone to
#    workspace: "Flow123d-{platform}-debug"

    scm:
      - git:
          url: https://github.com/flow123d/flow123d.git
          basedir: flow123d     # workspace/flow123d
          browser: githubweb
          browser-url: https://github.com/flow123d/flow123d

    triggers: 
      - github
    wrappers:

      - workspace-cleanup:
          dirmatch: true
          include:
            - "flow123d"
            - "build-*"
      - inject:
          script-content: 
            "echo \"BUILD_NAME=${{GIT_BRANCH#origin/}}@${{GIT_COMMIT:0:6}}\" >prop.file"
#      - build-name:
#          name:  "${PROPFILE,file=\"prop.file\",property=\"BUILD_NAME\"}  #${BUILD_NUMBER}"
    builders:
      - shell: "cd flow123d; git checkout ${{GIT_BRANCH##origin/}}"
      - multijob:
          name: "Configure Phase"
          condition: SUCCESSFUL
          projects:  
            - name: "Flow123d-configure-{platform}-debug"
      - multijob:
          name: "Build Flow123d libraries"
          condition: COMPLETED
          projects:
            - name: "Flow123d-build-libs-{platform}-debug"
      - multijob:
          name: "Unit tests"
          condition: COMPLETED
          projects:     #*UNIT-JOBS
            - name: "Unit-test-$PLACEHOLDER_unit_list$-{platform}-debug"
      - multijob:
          name: "Build Flow123d"
          condition: SUCCESSFUL
          projects:
            - name: "Flow123d-build-{platform}-debug"
      - multijob:
          name: "Integration tests"
          condition: COMPLETED
          projects:
            - name: "Test-$PLACEHOLDER_test_list$-{platform}-debug"
            


########################################################################
# Main multijob - release
#
# possible values for condition: {SUCCESSFUL, UNSTABLE, COMPLETED}
- job-template:
    name: "Flow123d-build-multijob-{platform}-release"
    display-name: "{platform} release Flow123d multijob"
    project-type: multijob
#    node: "{platform}"
    block-downstream: yes
    # workspace                 - directory with per-branch builds and external-projects dir
    # workspace/flow123d        - directore git clone to
#    workspace: "Flow123d-{platform}-release"
    scm:
      - git:
          url: https://github.com/flow123d/flow123d.git
          basedir: flow123d     # workspace/flow123d
          browser: githubweb
          browser-url: https://github.com/flow123d/flow123d
          branches:
            - master
    triggers:
      # once a day same time between 00:00 to 06:00; if source changed
      - pollscm: "H H(0-6) * * *"
      #- github
    wrappers:
      - workspace-cleanup:
          dirmatch: true
          include:
            - "flow123d"
            - "build-*"
            - "external_projects"
        # format and save build name common to all downstream jobs    
      - inject:
          script-content: 
            "echo \"BUILD_NAME=${{GIT_BRANCH##origin/}}@${{GIT_COMMIT:0:6}}\" >prop.file"
#      - build-name:
#          name:  "${{PROPFILE,file=\"prop.file\",property=\"BUILD_NAME\"}}  #${{BUILD_NUMBER}}"
    builders:
      - shell: "cd flow123d; git checkout ${{GIT_BRANCH##origin/}}"
      - multijob:
          name: "Configure Phase"
          condition: SUCCESSFUL
          projects:  
            - name: "Flow123d-configure-{platform}-release"
      - multijob:
          name: "Build Flow123d libraries"
          condition: COMPLETED
          projects:
            - name: "Flow123d-build-libs-{platform}-release"
      - multijob:
          name: "Unit tests"
          condition: COMPLETED
          projects:     #*UNIT-JOBS
            - name: "Unit-test-$PLACEHOLDER_unit_list$-{platform}-release"
      - multijob:
          name: "Build Flow123d"
          condition: SUCCESSFUL
          projects:
            - name: "Flow123d-build-{platform}-release"
      - multijob:
          name: "Integration tests"
          condition: COMPLETED
          projects:
            - name: "Test-$PLACEHOLDER_test_list$-{platform}-release"
      - multijob:
          name: "Pack and Install"
          condition: SUCCESSFUL
          projects:
            - name: "Pack-{platform}-release"

            


##################################333
# Modules      

#    triggers:
#      - github
      #
      # - timed: "H * * * *"
      #
      # Needs: BuildResultTrigger plugin, 
      # advantage over default mechanism: monitored jobs do not know about trigger
      # - build-result: 
      #   - jobs:  # jobs to monitor
      #   - results:

#    wrappers:
#      - build-name:
#          name:  "$GIT_BRANCH #$BUILD_NUMBER"
      # This may be useful for large data benchmarks.
      # We can not store large data in repository, but can copy them from 
      # Jenkins master, possibly download them first, e.g. from bacula.
      # needs Copy To Slave Plugin
      #- copy-to-slave:
      #

#    publishers:
      # - cifs: 
      # - email-ext:
      # - html-publisher:
      # - junit
      # - logparser: !!!
      # - performance: 
      # - pipeline: 
      # - plot:


    
  