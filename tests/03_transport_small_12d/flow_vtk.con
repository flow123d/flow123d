{
  problem = {
    TYPE = "SequentialCoupling", 
    description = "Transport 1D-2D, (convection, dual porosity, sorption)", 
    mesh = {
      mesh_file = "./input/mesh_with_boundary.msh",
      sets = [
          { name="1d_domain", 
            region_labels = [ "1d_upper", "1d_lower", "1d_left_branch"]
          }
        ]
    }, 

    primary_equation = {
      TYPE = "Steady_MH", 

      bulk_data = [
        { r_set = "1d_domain", conductivity = 10 },
        { region = "2d",       conductivity = 1  }
      ],
      
      bc_data = [
        { r_set = "BOUNDARY",
          bc_type = "dirichlet",
          bc_pressure = { TYPE="FieldFormula", value = "x+y" }
        }
      ],

      output = {
        output_stream = { REF = "/system/output_streams/0" }, 
        pressure_p0 = "flow_output_stream", 
        pressure_p1 = "flow_output_stream", 
        velocity_p0 = "flow_output_stream"
      }, 
      
      solver = {
        TYPE = "Petsc", 
        a_tol = 1e-12,
        r_tol = 1e-12
      }
    }, // primary equation

    secondary_equation = {
      TYPE = "TransportOperatorSplitting", 

      dual_porosity = true, 
      sorption_enable = true, 
      substances = [ "age", "U235" ],
      
      bulk_data = [
        { r_set = "ALL",
          init_conc = 0,
          por_m = 0.25,
          por_imm = 0.25,
          alpha = [0.01, 0.01],
          phi = 0.5,
          sorp_type = [ "linear", "freundlich" ],
          sorp_coef0 = [0.02, 0.02],
          sorp_coef1 = [0, 0.5]
        }
      ],
      
      bc_data = [
        { r_set = "BOUNDARY",
          bc_conc = 1.0
        }
      ],

      output = {
        output_stream = { REF = "/system/output_streams/1" },
        save_step = 0.01,
        mobile_p0 = "transport_output_stream"
      }, 

      time = {
        end_time = 1.0
      },
      mass_balance = {
        cumulative = true
      }
    } // secondary_equation
    
  }, // problem
 
  system = {
    output_streams = [
      {
        file = "test3.pvd", 
        format = { TYPE = "vtk", variant = "ascii" },
        name = "flow_output_stream"
      }, 
      {
        file = "test3-transport.pvd", 
        format = { TYPE = "vtk", variant = "ascii" },
        name = "transport_output_stream"
      }
    ]
  }
}